# This docker compose setup configures:
# - the Unleash server instance + the necessary backing Postgres database
# - the Unleash proxy
#
# To learn more about all the parts of Unleash, visit
# https://docs.getunleash.io
#
# NOTE: please do not use this configuration for production setups.
# Unleash does not take responsibility for any data leaks or other
# problems that may arise as a result.
#
# This is intended to be used for demo, development, and learning
# purposes only.


version: "3.9"

services:
  unleash:
    image: unleashorg/unleash-server:latest
    container_name: unleash
    ports:
      - "4242:4242"
    environment:
      # If Coolify provides a single DATABASE_URL, you can do:
      DATABASE_URL: "${DATABASE_URL}"

      # Alternatively, if you prefer separate env vars, you could do:
      # DATABASE_URL: "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"

      DATABASE_SSL: "false"         # or "true" if your external Postgres requires SSL
      LOG_LEVEL: "warn"

      # Optional tokens to auto-create API tokens in Unleash:
      INIT_FRONTEND_API_TOKENS: "${INIT_FRONTEND_API_TOKENS}"
      INIT_CLIENT_API_TOKENS: "${INIT_CLIENT_API_TOKENS}"

    # No "depends_on" needed if you're using an external DB service
    # Command & healthcheck are optional, but this is a typical approach:
    command: ["node", "index.js"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:4242/health"]
      interval: 1s
      timeout: 1m
      retries: 5
      start_period: 15s
    depends_on:
      db:
        condition: service_healthy
  db:
    expose:
      - "5432"
    image: postgres:15
    environment:
      # create a database called `db`
      POSTGRES_DB: "db"
      # trust incoming connections blindly (DON'T DO THIS IN PRODUCTION!)
      POSTGRES_HOST_AUTH_METHOD: "trust"
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "--username=postgres",
          "--host=localhost",
          "--port=5432"
        ]
      interval: 2s
      timeout: 1m
      retries: 5
      start_period: 10s

  
